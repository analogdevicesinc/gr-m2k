/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(adf4350_sink.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(2057e0e8a8fb54bca7adc9f21e79fe6b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/m2k/adf4350_sink.h>
// pydoc.h is automatically generated in the build directory
#include <adf4350_sink_pydoc.h>

void bind_adf4350_sink(py::module& m)
{

    using adf4350_sink    = ::gr::m2k::adf4350_sink;


    py::class_<adf4350_sink, gr::block, gr::basic_block,
        PYBIND11_SH_DEF(adf4350_sink)>(m, "adf4350_sink", D(adf4350_sink))

        .def(py::init(&adf4350_sink::make),
           py::arg("uri"),
           py::arg("clock"),
           py::arg("mosi"),
           py::arg("miso"),
           py::arg("chip_select"),
           py::arg("clkin"),
           py::arg("channel_spacing"),
           py::arg("power_up_frequency"),
           py::arg("reference_div_factor"),
           py::arg("reference_doubler_enable"),
           py::arg("reference_div2_enable"),
           py::arg("phase_detector_polarity_positive_enable"),
           py::arg("lock_detect_precision_6ns_enable"),
           py::arg("lock_detect_function_integer_n_enable"),
           py::arg("charge_pump_current"),
           py::arg("muxout_select"),
           py::arg("low_spur_mode_enable"),
           py::arg("cycle_slip_reduction_enable"),
           py::arg("charge_cancellation_enable"),
           py::arg("anti_backlash_3ns_enable"),
           py::arg("band_select_clock_mode_high_enable"),
           py::arg("clk_divider_12bit"),
           py::arg("clk_divider_mode"),
           py::arg("aux_output_enable"),
           py::arg("aux_output_fundamental_enable"),
           py::arg("mute_till_lock_enable"),
           py::arg("output_power"),
           py::arg("aux_output_power"),
           D(adf4350_sink,make)
        )
        



        ;




}








